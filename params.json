{"name":"Flower","tagline":"Real-time monitor and web admin for Celery","body":"\r\nFlower is a web based tool for monitoring and administrating Celery clusters\r\n\r\nFeatures\r\n--------\r\n\r\n- Real-time monitoring using Celery Events\r\n\r\n    - Task progress and history\r\n    - Ability to show task details (arguments, start time, runtime, and more)\r\n    - Graphs and statistics\r\n\r\n- Remote Control\r\n\r\n    - View worker status and statistics\r\n    - Shutdown and restart worker instances\r\n    - Control worker pool size and autoscale settings\r\n    - View and modify the queues a worker instance consumes from\r\n    - View currently running tasks\r\n    - View scheduled tasks (ETA/countdown)\r\n    - View reserved and revoked tasks\r\n    - Apply time and rate limits\r\n    - Configuration viewer\r\n    - Revoke or terminate tasks\r\n\r\n- Broker monitoring\r\n\r\n    - View statistics for all Celery queues\r\n    - Queue length graphs\r\n\r\n- HTTP API\r\n- Basic Auth and Google OpenID authentication\r\n\r\nAPI\r\n---\r\n\r\nFlower API enables to manage the cluster via REST api, call tasks and receive task\r\nevents in real-time via WebSockets.\r\n\r\nFor example you can restart worker's pool by:\r\n\r\n    $ curl -X POST http://localhost:5555/api/worker/pool/restart/myworker\r\n\r\nOr call a task by:\r\n\r\n    $ curl -X POST -d '{\"args\":[1,2]}' http://localhost:5555/api/task/async-apply/tasks.add\r\n\r\nOr terminate executing task by:\r\n\r\n    $ curl -X POST -d 'terminate=True' http://localhost:5555/api/task/revoke/8a4da87b-e12b-4547-b89a-e92e4d1f8efd\r\n\r\nOr receive task completion events in real-time:\r\n\r\n    var ws = new WebSocket('ws://localhost:5555/api/task/events/task-succeeded/');\r\n    ws.onmessage = function (event) {\r\n        console.log(event.data);\r\n    }\r\n\r\nInstallation\r\n------------\r\n\r\nTo install, simply:\r\n\r\n    $ pip install flower\r\n\r\nUsage\r\n-----\r\n\r\nLaunch the server and open http://localhost:5555:\r\n\r\n    $ celery flower --address=127.0.0.1 --port=5555\r\n\r\nBroker URL and other configuration options can be passed through the standard Celery options:\r\n\r\n    $ celery flower --broker=amqp://guest:guest@localhost:5672//\r\n\r\nScreenshots\r\n-----------\r\n\r\n![Dashboard](https://raw.github.com/mher/flower/master/docs/screenshots/dashboard.png)\r\n\r\n![Worker Pool](https://raw.github.com/mher/flower/master/docs/screenshots/pool.png)\r\n\r\n![Tasks](https://raw.github.com/mher/flower/master/docs/screenshots/tasks.png)\r\n\r\n![Task](https://raw.github.com/mher/flower/master/docs/screenshots/task.png)\r\n\r\n![Monitor](https://raw.github.com/mher/flower/master/docs/screenshots/monitor.png)\r\n\r\n[More screenshots](https://github.com/mher/flower/tree/master/docs/screenshots)","google":"UA-42103143-1","note":"Don't delete this file! It's used internally to help with page regeneration."}